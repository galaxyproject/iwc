{
    "name": "main",
    "subclass": "Galaxy",
    "publish": true,
    "primaryDescriptorPath": "/taxonomic-rank-abundance-summary-table.ga",
    "testParameterFiles": [
        "/taxonomic-rank-abundance-summary-table-tests.yml"
    ],
    "authors": [
        {
            "name": "Rand Zoabi",
            "orcid": "0009-0000-2501-8053",
            "url": "https://github.com/RZ9082"
        }
    ],
    "definition": {
        "a_galaxy_workflow": "true",
        "annotation": "This workflow creates taxonomic summary tables for a specified taxonomic rank out of MAPseq's OTU tables output collection.",
        "comments": [],
        "creator": [
            {
                "class": "Person",
                "identifier": "https://orcid.org/0009-0000-2501-8053",
                "name": "Rand Zoabi",
                "url": "https://github.com/RZ9082"
            }
        ],
        "format-version": "0.1",
        "license": "MIT",
        "name": "Taxonomic abundance summary tables for a specified taxonomic rank",
        "release": "0.2",
        "report": {
            "markdown": "\n# Workflow Execution Report\n\n## Workflow Inputs\n```galaxy\ninvocation_inputs()\n```\n\n## Workflow Outputs\n```galaxy\ninvocation_outputs()\n```\n\n## Workflow\n```galaxy\nworkflow_display()\n```\n"
        },
        "steps": {
            "0": {
                "annotation": "OTU tables.",
                "content_id": null,
                "errors": null,
                "id": 0,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "OTU tables.",
                        "name": "OTU tables"
                    }
                ],
                "label": "OTU tables",
                "name": "Input dataset collection",
                "outputs": [],
                "position": {
                    "left": 0,
                    "top": 25.297647871305003
                },
                "tool_id": null,
                "tool_state": "{\"optional\": false, \"tag\": null, \"collection_type\": \"list\"}",
                "tool_version": null,
                "type": "data_collection_input",
                "uuid": "9a5f6c83-e6c6-4b46-a78a-2890ec4e736a",
                "when": null,
                "workflow_outputs": []
            },
            "1": {
                "annotation": "Choose a taxonomic rank for a dedicated taxonomic abundance summary table.",
                "content_id": null,
                "errors": null,
                "id": 1,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "Choose a taxonomic rank for a dedicated taxonomic abundance summary table.",
                        "name": "Taxonomic rank"
                    }
                ],
                "label": "Taxonomic rank",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 9.007353607619836,
                    "top": 235.5333251953125
                },
                "tool_id": null,
                "tool_state": "{\"default\": \"phylum\", \"validators\": [], \"restrictions\": [\"superkingdom\", \"kingdom\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\"], \"parameter_type\": \"text\", \"optional\": true}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "acd7e798-86d0-458b-bce9-ca17ccf7bcd7",
                "when": null,
                "workflow_outputs": []
            },
            "2": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/map_param_value/map_param_value/0.2.0",
                "errors": null,
                "id": 2,
                "input_connections": {
                    "input_param_type|input_param": {
                        "id": 1,
                        "output_name": "output"
                    }
                },
                "inputs": [
                    {
                        "description": "runtime parameter for tool Map parameter value",
                        "name": "input_param_type"
                    }
                ],
                "label": null,
                "name": "Map parameter value",
                "outputs": [
                    {
                        "name": "output_param_text",
                        "type": "expression.json"
                    }
                ],
                "position": {
                    "left": 312.01935360761985,
                    "top": 253.5333251953125
                },
                "post_job_actions": {
                    "HideDatasetActionoutput_param_text": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "output_param_text"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/map_param_value/map_param_value/0.2.0",
                "tool_shed_repository": {
                    "changeset_revision": "5ac8a4bf7a8d",
                    "name": "map_param_value",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"input_param_type\": {\"type\": \"text\", \"__current_case__\": 0, \"input_param\": {\"__class__\": \"ConnectedValue\"}, \"mappings\": [{\"__index__\": 0, \"from\": \"superkingdom\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 1;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 1, \"from\": \"kingdom\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 2;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 2, \"from\": \"phylum\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 3;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 3, \"from\": \"class\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 4;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 4, \"from\": \"order\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 5;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 5, \"from\": \"family\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 6;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 6, \"from\": \"genus\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 7;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}, {\"__index__\": 7, \"from\": \"species\", \"to\": \"NR > 2 {          split($3, taxa, \\\";\\\");         merged = \\\"\\\";         levels = 8;         for (i = 1; i <= levels; i++) {             if (i <= length(taxa) && taxa[i] ~ /__/) {                 split(taxa[i], parts, \\\"__\\\");                 if (parts[2] != \\\"\\\") {                     value = parts[2];                 } else {                     value = \\\"unassigned\\\";                 }             } else {                 value = \\\"unassigned\\\";             }             merged = merged (merged ? \\\";\\\" : \\\"\\\") value;         }         print merged \\\"\\\\t\\\" $2;     }\"}]}, \"output_param_type\": \"text\", \"unmapped\": {\"on_unmapped\": \"fail\", \"__current_case__\": 1}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.2.0",
                "type": "tool",
                "uuid": "4489644f-e82c-4b70-9cf0-1f90c3bcbdd0",
                "when": null,
                "workflow_outputs": []
            },
            "3": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/map_param_value/map_param_value/0.2.0",
                "errors": null,
                "id": 3,
                "input_connections": {
                    "input_param_type|input_param": {
                        "id": 1,
                        "output_name": "output"
                    }
                },
                "inputs": [
                    {
                        "description": "runtime parameter for tool Map parameter value",
                        "name": "input_param_type"
                    }
                ],
                "label": null,
                "name": "Map parameter value",
                "outputs": [
                    {
                        "name": "output_param_text",
                        "type": "expression.json"
                    }
                ],
                "position": {
                    "left": 303.0073536076199,
                    "top": 463.5333251953125
                },
                "post_job_actions": {
                    "HideDatasetActionoutput_param_text": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "output_param_text"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/map_param_value/map_param_value/0.2.0",
                "tool_shed_repository": {
                    "changeset_revision": "5ac8a4bf7a8d",
                    "name": "map_param_value",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"input_param_type\": {\"type\": \"text\", \"__current_case__\": 0, \"input_param\": {\"__class__\": \"ConnectedValue\"}, \"mappings\": [{\"__index__\": 0, \"from\": \"superkingdom\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 1; i++) { if (i < 1) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 1, \"from\": \"kingdom\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 2; i++) { if (i < 2) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 2, \"from\": \"phylum\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 3; i++) { if (i < 3) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 3, \"from\": \"class\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\\tclass\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 4; i++) { if (i < 4) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 4, \"from\": \"order\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\\tclass\\\\torder\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 5; i++) { if (i < 5) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 5, \"from\": \"family\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\\tclass\\\\torder\\\\tfamily\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 6; i++) { if (i < 6) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 6, \"from\": \"genus\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\\tclass\\\\torder\\\\tfamily\\\\tgenus\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 7; i++) { if (i < 7) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}, {\"__index__\": 7, \"from\": \"species\", \"to\": \"BEGIN { FS = OFS = \\\"\\\\t\\\" } NR == 1 { printf \\\"superkingdom\\\\tkingdom\\\\tphylum\\\\tclass\\\\torder\\\\tfamily\\\\tgenus\\\\tspecies\\\"; for (i = 2; i <= NF; i++) { split($i, name_parts, \\\"_\\\"); printf \\\"\\\\t%s\\\", name_parts[1] } printf \\\"\\\\n\\\" } NR > 1 { split($1, taxa_parts, \\\";\\\"); for (i = 1; i <= 8; i++) { if (i < 8) { printf \\\"%s\\\\t\\\", taxa_parts[i] } else { printf \\\"%s\\\", taxa_parts[i] } } for (i = 2; i <= NF; i++) { if (i < NF) { printf \\\"\\\\t%s\\\", $i } else { printf \\\"\\\\t%s\\\\n\\\", $i } } }\"}]}, \"output_param_type\": \"text\", \"unmapped\": {\"on_unmapped\": \"fail\", \"__current_case__\": 1}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.2.0",
                "type": "tool",
                "uuid": "9c63fe51-fe0c-4f92-8aee-fc412e272f59",
                "when": null,
                "workflow_outputs": []
            },
            "4": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "errors": null,
                "id": 4,
                "input_connections": {
                    "code": {
                        "id": 2,
                        "output_name": "output_param_text"
                    },
                    "infile": {
                        "id": 0,
                        "output_name": "output"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Text reformatting",
                "outputs": [
                    {
                        "name": "outfile",
                        "type": "input"
                    }
                ],
                "position": {
                    "left": 299.74718715848013,
                    "top": 1.7389953573637058
                },
                "post_job_actions": {
                    "HideDatasetActionoutfile": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "outfile"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "3dc70b59608c",
                    "name": "text_processing",
                    "owner": "bgruening",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"code\": {\"__class__\": \"ConnectedValue\"}, \"infile\": {\"__class__\": \"ConnectedValue\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "9.5+galaxy0",
                "type": "tool",
                "uuid": "7cf9ee51-56ef-4270-8d30-f13ef88cfbc8",
                "when": null,
                "workflow_outputs": []
            },
            "5": {
                "annotation": "",
                "content_id": "Grouping1",
                "errors": null,
                "id": 5,
                "input_connections": {
                    "input1": {
                        "id": 4,
                        "output_name": "outfile"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Group",
                "outputs": [
                    {
                        "name": "out_file1",
                        "type": "tabular"
                    }
                ],
                "position": {
                    "left": 520.5962466215664,
                    "top": 3.110728645954282
                },
                "post_job_actions": {
                    "HideDatasetActionout_file1": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "out_file1"
                    }
                },
                "tool_id": "Grouping1",
                "tool_state": "{\"groupcol\": \"1\", \"ignorecase\": false, \"ignorelines\": null, \"input1\": {\"__class__\": \"ConnectedValue\"}, \"operations\": [{\"__index__\": 0, \"optype\": \"sum\", \"opcol\": \"2\", \"opround\": \"no\", \"opdefault\": null}], \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "2.1.4",
                "type": "tool",
                "uuid": "80ff4e60-4b7e-40d7-b375-7ec7ee7b16f0",
                "when": null,
                "workflow_outputs": []
            },
            "6": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.3.1",
                "errors": null,
                "id": 6,
                "input_connections": {
                    "input": {
                        "id": 5,
                        "output_name": "out_file1"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Filter Tabular",
                "outputs": [
                    {
                        "name": "output",
                        "type": "tabular"
                    }
                ],
                "position": {
                    "left": 745.5605059504245,
                    "top": 3.110728645954282
                },
                "post_job_actions": {
                    "HideDatasetActionoutput": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "output"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.3.1",
                "tool_shed_repository": {
                    "changeset_revision": "90f657745fea",
                    "name": "filter_tabular",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"comment_char\": true, \"input\": {\"__class__\": \"ConnectedValue\"}, \"linefilters\": [{\"__index__\": 0, \"filter\": {\"filter_type\": \"prepend_dataset_name\", \"__current_case__\": 4}}], \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "3.3.1",
                "type": "tool",
                "uuid": "428d0d7f-339e-4f48-9420-1259bae0de17",
                "when": null,
                "workflow_outputs": []
            },
            "7": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "errors": null,
                "id": 7,
                "input_connections": {
                    "infile": {
                        "id": 6,
                        "output_name": "output"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Text reformatting",
                "outputs": [
                    {
                        "name": "outfile",
                        "type": "input"
                    }
                ],
                "position": {
                    "left": 966.4095654135107,
                    "top": 1.7389953573637058
                },
                "post_job_actions": {
                    "HideDatasetActionoutfile": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "outfile"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "3dc70b59608c",
                    "name": "text_processing",
                    "owner": "bgruening",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"code\": \"BEGIN {\\n  FS = OFS = \\\"\\\\t\\\"\\n}\\nNR == 1 {\\n  print \\\"taxa\\\", $1\\n}\\nNR > 0 {\\n  print $2, $3\\n}\\n\", \"infile\": {\"__class__\": \"ConnectedValue\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "9.5+galaxy0",
                "type": "tool",
                "uuid": "b52578ff-8185-42db-b3a5-d04601217243",
                "when": null,
                "workflow_outputs": []
            },
            "8": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3",
                "errors": null,
                "id": 8,
                "input_connections": {
                    "input_tabular": {
                        "id": 7,
                        "output_name": "outfile"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Column join",
                "outputs": [
                    {
                        "name": "tabular_output",
                        "type": "tabular"
                    }
                ],
                "position": {
                    "left": 1187.2586248765972,
                    "top": 0.3672620687731296
                },
                "post_job_actions": {
                    "HideDatasetActiontabular_output": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "tabular_output"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3",
                "tool_shed_repository": {
                    "changeset_revision": "3ddd99c7efee",
                    "name": "collection_column_join",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"fill_char\": \"0\", \"has_header\": \"1\", \"identifier_column\": \"1\", \"include_outputs\": null, \"input_tabular\": {\"__class__\": \"ConnectedValue\"}, \"old_col_in_header\": false, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.0.3",
                "type": "tool",
                "uuid": "fc14bb27-e0b9-4a8e-bc17-006deaef59bc",
                "when": null,
                "workflow_outputs": []
            },
            "9": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "errors": null,
                "id": 9,
                "input_connections": {
                    "code": {
                        "id": 3,
                        "output_name": "output_param_text"
                    },
                    "infile": {
                        "id": 8,
                        "output_name": "tabular_output"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "Text reformatting",
                "outputs": [
                    {
                        "name": "outfile",
                        "type": "input"
                    }
                ],
                "position": {
                    "left": 1414.969304779495,
                    "top": 0
                },
                "post_job_actions": {
                    "RenameDatasetActionoutfile": {
                        "action_arguments": {
                            "newname": "Taxonomic rank summary table"
                        },
                        "action_type": "RenameDatasetAction",
                        "output_name": "outfile"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "3dc70b59608c",
                    "name": "text_processing",
                    "owner": "bgruening",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"code\": {\"__class__\": \"ConnectedValue\"}, \"infile\": {\"__class__\": \"ConnectedValue\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "9.5+galaxy0",
                "type": "tool",
                "uuid": "6f47b97a-8e69-4c3c-ba7b-c0470ef3c37e",
                "when": null,
                "workflow_outputs": [
                    {
                        "label": "Taxonomic rank summary table",
                        "output_name": "outfile",
                        "uuid": "d44762e6-8306-4965-b146-d9ebb35f984c"
                    }
                ]
            }
        },
        "tags": [
            "MGnify_Amplicon",
            "amplicon",
            "metagenomics",
            "name:microgalaxy"
        ],
        "uuid": "31b19088-dad2-41a0-b086-94037bce4784",
        "version": 4
    },
    "workflow_job_input": {
        "OTU tables": {
            "class": "Collection",
            "collection_type": "list",
            "elements": [
                {
                    "class": "File",
                    "identifier": "todo_element_name",
                    "path": "todo_test_data_path.ext"
                }
            ]
        }
    },
    "readme": "# Taxonomic rank abundance summary table\n\nThis subworkflow generates taxonomic abundance summary tables for a user-chosen taxonomic rank.\n\n## Input datasets\n\n- **OTU table collection** containing the taxonomic abundance tables of all datasets.\n\n## Outputs\n\n- Specified taxonomic level abundance summary",
    "changelog": "# Changelog\n\n## [0.2] - 2025-03-10\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.3+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/9.5+galaxy0`\n\n## [0.1] - 2025-01-27\n\n- First release\n",
    "diagrams": "# Workflow diagrams\n\n## Taxonomic abundance summary tables for a specified taxonomic rank\n\n```mermaid\ngraph LR\n0[\"\u2139\ufe0f OTU tables\"]@{ shape: docs }\n1[\"\u2139\ufe0f Taxonomic rank\"]@{ shape: lean-l }\n2[\"Map parameter value\"]@{ shape: process }\n1 --> 2\n3[\"Map parameter value\"]@{ shape: process }\n1 --> 3\n4[\"Text reformatting\"]@{ shape: process }\n2 --> 4\n0 --> 4\n5[\"Group\"]@{ shape: process }\n4 --> 5\n6[\"Filter Tabular\"]@{ shape: process }\n5 --> 6\n7[\"Text reformatting\"]@{ shape: process }\n6 --> 7\n8[\"Column join\"]@{ shape: process }\n7 --> 8\n9[\"Text reformatting\"]@{ shape: process }\n3 --> 9\n8 --> 9\n```\n",
    "updated": "2025-03-10T00:00:00",
    "trsID": "#workflow/github.com/iwc-workflows/taxonomic-rank-abundance-summary-table/main",
    "iwcID": "taxonomic-rank-abundance-summary-table-main",
    "dockstore_id": 30524,
    "categories": [],
    "collections": [
        "Microbiome"
    ],
    "doi": "10.5281/zenodo.15078789",
    "tests": [
        {
            "doc": "Test outline for mgnify-amplicon-summary-tables.ga",
            "job": {
                "OTU tables": {
                    "class": "Collection",
                    "collection_type": "list",
                    "elements": [
                        {
                            "class": "File",
                            "identifier": "ERR3046414_MERGED_FASTQ_SSU_OTU.tabular",
                            "location": "https://zenodo.org/records/13710235/files/ERR3046414_MERGED_FASTQ_SSU_OTU.tabular",
                            "filetype": "tabular"
                        },
                        {
                            "class": "File",
                            "identifier": "ERR3046440_MERGED_FASTQ_SSU_OTU.tabular",
                            "location": "https://zenodo.org/records/13710235/files/ERR3046440_MERGED_FASTQ_SSU_OTU.tabular",
                            "filetype": "tabular"
                        },
                        {
                            "class": "File",
                            "identifier": "ERR4319664_MERGED_FASTQ_SSU_OTU.tabular",
                            "location": "https://zenodo.org/records/13710235/files/ERR4319664_MERGED_FASTQ_SSU_OTU.tabular",
                            "filetype": "tabular"
                        },
                        {
                            "class": "File",
                            "identifier": "ERR4319712_MERGED_FASTQ_SSU_OTU.tabular",
                            "location": "https://zenodo.org/records/13710235/files/ERR4319712_MERGED_FASTQ_SSU_OTU.tabular",
                            "filetype": "tabular"
                        }
                    ]
                },
                "Taxonomic rank": "family"
            },
            "outputs": {
                "Taxonomic rank summary table": {
                    "asserts": [
                        {
                            "that": "has_size",
                            "size": 11263
                        },
                        {
                            "that": "has_text",
                            "text": "superkingdom\tkingdom\tphylum\tclass\torder\tfamily\tERR3046414\tERR3046440\tERR4319664\tERR4319712"
                        },
                        {
                            "that": "has_text",
                            "text": "Bacteria\tunassigned\tActinobacteria\tAcidimicrobiia\tunassigned\tunassigned\t0\t0\t1\t3"
                        },
                        {
                            "that": "has_text",
                            "text": "Bacteria\tunassigned\tActinobacteria\tActinobacteria\tActinomycetales\tActinomycetaceae\t4\t1\t0\t0"
                        },
                        {
                            "that": "has_n_lines",
                            "n": 129
                        },
                        {
                            "that": "has_n_columns",
                            "n": 10
                        }
                    ]
                }
            }
        }
    ]
}