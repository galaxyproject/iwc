{
    "name": "baredSC-1d-logNorm",
    "subclass": "Galaxy",
    "publish": true,
    "primaryDescriptorPath": "/baredSC-1d-logNorm.ga",
    "testParameterFiles": [
        "/baredSC-1d-logNorm-tests.yml"
    ],
    "authors": [
        {
            "name": "Lucille Delisle",
            "orcid": "0000-0002-1964-4960"
        }
    ],
    "definition": {
        "a_galaxy_workflow": "true",
        "annotation": "Applies baredSC algorithm to fit and combine one-dimensional Gaussian mixture models (from 1 to N components) on log-normalized single-cell gene expression data. Enables identification of subpopulations based on expression of genes of interest and provides statistical assessment of the optimal number of components in heterogeneous cell populations.",
        "creator": [
            {
                "class": "Person",
                "identifier": "https://orcid.org/0000-0002-1964-4960",
                "name": "Lucille Delisle"
            }
        ],
        "format-version": "0.1",
        "license": "MIT",
        "release": "0.6",
        "name": "Single-Cell Mixture Analysis: baredSC 1D Log-Normalized Models",
        "steps": {
            "0": {
                "annotation": "The dataset must have a first row with row names. Among them should be 'nCount_RNA' and the gene you want to get PDF of.",
                "content_id": null,
                "errors": null,
                "id": 0,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "The dataset must have a first row with row names. Among them should be 'nCount_RNA' and the gene you want to get PDF of.",
                        "name": "Tabular with raw expression values"
                    }
                ],
                "label": "Tabular with raw expression values",
                "name": "Input dataset",
                "outputs": [],
                "position": {
                    "left": 0,
                    "top": 0
                },
                "tool_id": null,
                "tool_state": "{\"optional\": false, \"format\": [\"tabular\"], \"tag\": null}",
                "tool_version": null,
                "type": "data_input",
                "uuid": "247797f8-537d-434c-b7f0-b5212d6a6139",
                "when": null,
                "workflow_outputs": []
            },
            "1": {
                "annotation": "Must be included in the first row of the tabular",
                "content_id": null,
                "errors": null,
                "id": 1,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "Must be included in the first row of the tabular",
                        "name": "Gene name"
                    }
                ],
                "label": "Gene name",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 51,
                    "top": 95
                },
                "tool_id": null,
                "tool_state": "{\"validators\": [], \"parameter_type\": \"text\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "8486d61d-03ce-44df-a74c-0aa6a5b0e0b7",
                "when": null,
                "workflow_outputs": []
            },
            "2": {
                "annotation": "Maximum value to explore in logNorm",
                "content_id": null,
                "errors": null,
                "id": 2,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "Maximum value to explore in logNorm",
                        "name": "Maximum value in logNorm"
                    }
                ],
                "label": "Maximum value in logNorm",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 97,
                    "top": 176.5
                },
                "tool_id": null,
                "tool_state": "{\"validators\": [], \"parameter_type\": \"float\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "a54a81dc-8b4c-4ed3-8d4e-0748755873e8",
                "when": null,
                "workflow_outputs": []
            },
            "3": {
                "annotation": "Usually 4 is enough",
                "content_id": null,
                "errors": null,
                "id": 3,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "Usually 4 is enough",
                        "name": "Maximum number of Gaussians to study"
                    }
                ],
                "label": "Maximum number of Gaussians to study",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 268,
                    "top": 291
                },
                "tool_id": null,
                "tool_state": "{\"validators\": [], \"parameter_type\": \"integer\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "b7482c04-93ff-4f34-acbd-9c46d1f067cd",
                "when": null,
                "workflow_outputs": []
            },
            "4": {
                "annotation": "",
                "id": 4,
                "input_connections": {
                    "Maximum number in param output": {
                        "id": 3,
                        "input_subworkflow_step_id": 0,
                        "output_name": "output"
                    }
                },
                "inputs": [],
                "label": null,
                "name": "generate_param_list_one_to_number",
                "outputs": [],
                "position": {
                    "left": 547,
                    "top": 231.5
                },
                "subworkflow": {
                    "a_galaxy_workflow": "true",
                    "annotation": "",
                    "comments": [],
                    "creator": [
                        {
                            "class": "Person",
                            "identifier": "https://orcid.org/0000-0002-1964-4960",
                            "name": "Lucille Delisle"
                        }
                    ],
                    "format-version": "0.1",
                    "license": "MIT",
                    "name": "generate_param_list_one_to_number",
                    "steps": {
                        "0": {
                            "annotation": "Maximum number in param output",
                            "content_id": null,
                            "errors": null,
                            "id": 0,
                            "input_connections": {},
                            "inputs": [
                                {
                                    "description": "Maximum number in param output",
                                    "name": "Maximum number in param output"
                                }
                            ],
                            "label": "Maximum number in param output",
                            "name": "Input parameter",
                            "outputs": [],
                            "position": {
                                "left": 0,
                                "top": 36
                            },
                            "tool_id": null,
                            "tool_state": "{\"validators\": [], \"parameter_type\": \"integer\", \"optional\": false}",
                            "tool_version": null,
                            "type": "parameter_input",
                            "uuid": "655f8763-6f41-401c-a7c2-cbc0926222c0",
                            "when": null,
                            "workflow_outputs": [
                                {
                                    "label": null,
                                    "output_name": "output",
                                    "uuid": "996f5ca8-629e-4887-9bc0-2d719b790868"
                                }
                            ]
                        },
                        "1": {
                            "annotation": "",
                            "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.5+galaxy0",
                            "errors": null,
                            "id": 1,
                            "input_connections": {
                                "token_set_0|repeat_select|times": {
                                    "id": 0,
                                    "output_name": "output"
                                }
                            },
                            "inputs": [],
                            "label": "create first tabular with good number of rows.",
                            "name": "Create text file",
                            "outputs": [
                                {
                                    "name": "outfile",
                                    "type": "txt"
                                }
                            ],
                            "position": {
                                "left": 280,
                                "top": 0
                            },
                            "post_job_actions": {
                                "ChangeDatatypeActionoutfile": {
                                    "action_arguments": {
                                        "newtype": "tabular"
                                    },
                                    "action_type": "ChangeDatatypeAction",
                                    "output_name": "outfile"
                                },
                                "HideDatasetActionoutfile": {
                                    "action_arguments": {},
                                    "action_type": "HideDatasetAction",
                                    "output_name": "outfile"
                                }
                            },
                            "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.5+galaxy0",
                            "tool_shed_repository": {
                                "changeset_revision": "3dc70b59608c",
                                "name": "text_processing",
                                "owner": "bgruening",
                                "tool_shed": "toolshed.g2.bx.psu.edu"
                            },
                            "tool_state": "{\"token_set\": [{\"__index__\": 0, \"line\": \"whatever\", \"repeat_select\": {\"repeat_select_opts\": \"user\", \"__current_case__\": 0, \"times\": {\"__class__\": \"ConnectedValue\"}}}], \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                            "tool_version": "9.5+galaxy0",
                            "type": "tool",
                            "uuid": "c96eeaba-7b46-478f-bc6d-ac3d64f72523",
                            "when": null,
                            "workflow_outputs": []
                        },
                        "2": {
                            "annotation": "",
                            "content_id": "addValue",
                            "errors": null,
                            "id": 2,
                            "input_connections": {
                                "input": {
                                    "id": 1,
                                    "output_name": "outfile"
                                }
                            },
                            "inputs": [],
                            "label": "add column with numbers starting at 1",
                            "name": "Add column",
                            "outputs": [
                                {
                                    "name": "out_file1",
                                    "type": "input"
                                }
                            ],
                            "position": {
                                "left": 560,
                                "top": 20
                            },
                            "post_job_actions": {
                                "HideDatasetActionout_file1": {
                                    "action_arguments": {},
                                    "action_type": "HideDatasetAction",
                                    "output_name": "out_file1"
                                }
                            },
                            "tool_id": "addValue",
                            "tool_state": "{\"exp\": \"1\", \"input\": {\"__class__\": \"ConnectedValue\"}, \"iterate\": \"yes\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                            "tool_version": "1.0.0",
                            "type": "tool",
                            "uuid": "20631933-3793-45f0-9fb5-6f3d9463457b",
                            "when": null,
                            "workflow_outputs": []
                        },
                        "3": {
                            "annotation": "",
                            "content_id": "Cut1",
                            "errors": null,
                            "id": 3,
                            "input_connections": {
                                "input": {
                                    "id": 2,
                                    "output_name": "out_file1"
                                }
                            },
                            "inputs": [],
                            "label": "retrieve numbers",
                            "name": "Cut",
                            "outputs": [
                                {
                                    "name": "out_file1",
                                    "type": "tabular"
                                }
                            ],
                            "position": {
                                "left": 840,
                                "top": 20
                            },
                            "post_job_actions": {
                                "HideDatasetActionout_file1": {
                                    "action_arguments": {},
                                    "action_type": "HideDatasetAction",
                                    "output_name": "out_file1"
                                }
                            },
                            "tool_id": "Cut1",
                            "tool_state": "{\"columnList\": \"c2\", \"delimiter\": \"T\", \"input\": {\"__class__\": \"ConnectedValue\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                            "tool_version": "1.0.2",
                            "type": "tool",
                            "uuid": "b467476c-8691-4fd4-aea0-d783b14b997a",
                            "when": null,
                            "workflow_outputs": []
                        },
                        "4": {
                            "annotation": "",
                            "content_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.2",
                            "errors": null,
                            "id": 4,
                            "input_connections": {
                                "split_parms|input": {
                                    "id": 3,
                                    "output_name": "out_file1"
                                }
                            },
                            "inputs": [
                                {
                                    "description": "runtime parameter for tool Split file",
                                    "name": "split_parms"
                                }
                            ],
                            "label": "split numbers to collection",
                            "name": "Split file",
                            "outputs": [
                                {
                                    "name": "list_output_tab",
                                    "type": "input"
                                }
                            ],
                            "position": {
                                "left": 1120,
                                "top": 20
                            },
                            "post_job_actions": {
                                "HideDatasetActionlist_output_tab": {
                                    "action_arguments": {},
                                    "action_type": "HideDatasetAction",
                                    "output_name": "list_output_tab"
                                }
                            },
                            "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.2",
                            "tool_shed_repository": {
                                "changeset_revision": "2dae863c8f42",
                                "name": "split_file_to_collection",
                                "owner": "bgruening",
                                "tool_shed": "toolshed.g2.bx.psu.edu"
                            },
                            "tool_state": "{\"split_parms\": {\"select_ftype\": \"tabular\", \"__current_case__\": 0, \"input\": {\"__class__\": \"ConnectedValue\"}, \"top\": \"0\", \"split_by\": {\"select_split_by\": \"row\", \"__current_case__\": 1, \"select_mode\": {\"mode\": \"chunk\", \"__current_case__\": 0, \"chunksize\": \"1\"}, \"newfilenames\": \"split_file\", \"select_allocate\": {\"allocate\": \"byrow\", \"__current_case__\": 2}}}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                            "tool_version": "0.5.2",
                            "type": "tool",
                            "uuid": "b621baec-46f7-4dfe-b6fa-f8c44c2822f2",
                            "when": null,
                            "workflow_outputs": []
                        },
                        "5": {
                            "annotation": "",
                            "content_id": "param_value_from_file",
                            "errors": null,
                            "id": 5,
                            "input_connections": {
                                "input1": {
                                    "id": 4,
                                    "output_name": "list_output_tab"
                                }
                            },
                            "inputs": [],
                            "label": "numbers to param",
                            "name": "Parse parameter value",
                            "outputs": [
                                {
                                    "name": "integer_param",
                                    "type": "expression.json"
                                }
                            ],
                            "position": {
                                "left": 1400,
                                "top": 29
                            },
                            "post_job_actions": {},
                            "tool_id": "param_value_from_file",
                            "tool_state": "{\"input1\": {\"__class__\": \"ConnectedValue\"}, \"param_type\": \"integer\", \"remove_newlines\": true, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                            "tool_version": "0.1.0",
                            "type": "tool",
                            "uuid": "1aff7c8b-0554-4e98-962d-3d6b161fa133",
                            "when": null,
                            "workflow_outputs": [
                                {
                                    "label": "params_list",
                                    "output_name": "integer_param",
                                    "uuid": "e05e466c-4694-4d6e-90dc-ea4e1aa3ff58"
                                }
                            ]
                        }
                    },
                    "tags": [],
                    "uuid": "2c6dc95f-cd21-4867-b848-57bfd47cb80f"
                },
                "tool_id": null,
                "type": "subworkflow",
                "uuid": "e5607959-5b5e-4898-92ab-078c7cafb327",
                "when": null,
                "workflow_outputs": []
            },
            "5": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/baredsc_1d/baredsc_1d/1.1.3+galaxy0",
                "errors": null,
                "id": 5,
                "input_connections": {
                    "MCMC|nnorm": {
                        "id": 4,
                        "output_name": "params_list"
                    },
                    "MCMC|xmax": {
                        "id": 2,
                        "output_name": "output"
                    },
                    "geneColName": {
                        "id": 1,
                        "output_name": "output"
                    },
                    "input_counts|input": {
                        "id": 0,
                        "output_name": "output"
                    }
                },
                "inputs": [
                    {
                        "description": "runtime parameter for tool baredSC 1d",
                        "name": "MCMC"
                    },
                    {
                        "description": "runtime parameter for tool baredSC 1d",
                        "name": "MCMC"
                    },
                    {
                        "description": "runtime parameter for tool baredSC 1d",
                        "name": "input_counts"
                    }
                ],
                "label": "baredSC",
                "name": "baredSC 1d",
                "outputs": [
                    {
                        "name": "qc_plots",
                        "type": "input"
                    },
                    {
                        "name": "other_outputs",
                        "type": "input"
                    },
                    {
                        "name": "output",
                        "type": "npz"
                    },
                    {
                        "name": "neff",
                        "type": "txt"
                    },
                    {
                        "name": "pdf",
                        "type": "tabular"
                    },
                    {
                        "name": "plot",
                        "type": "png"
                    },
                    {
                        "name": "logevidence",
                        "type": "txt"
                    }
                ],
                "position": {
                    "left": 867,
                    "top": 114.5
                },
                "post_job_actions": {
                    "HideDatasetActionlogevidence": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "logevidence"
                    },
                    "HideDatasetActionother_outputs": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "other_outputs"
                    },
                    "HideDatasetActionpdf": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "pdf"
                    },
                    "HideDatasetActionplot": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "plot"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/baredsc_1d/baredsc_1d/1.1.3+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "769d815e4b0d",
                    "name": "baredsc_1d",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"MCMC\": {\"xmin\": \"0.0\", \"xmax\": {\"__class__\": \"ConnectedValue\"}, \"nx\": \"100\", \"minScalex\": \"0.1\", \"scale\": {\"type\": \"Seurat\", \"__current_case__\": 0, \"targetSum\": \"10000.0\"}, \"seed\": \"1\", \"nnorm\": {\"__class__\": \"ConnectedValue\"}, \"nsampMCMC\": \"100000\", \"automaticRestart\": {\"set_minNeff\": \"yes\", \"__current_case__\": 0, \"minNeff\": \"200.0\"}}, \"advanced\": {\"osampx\": \"10\", \"osampxpdf\": \"5\", \"coviscale\": \"1.0\", \"nis\": \"1000\", \"burn\": {\"custom\": \"no\", \"__current_case__\": 0}}, \"filter\": {\"nb\": \"0\", \"__current_case__\": 0}, \"geneColName\": {\"__class__\": \"ConnectedValue\"}, \"input_counts\": {\"filetype\": \"tabular\", \"__current_case__\": 0, \"input\": {\"__class__\": \"ConnectedValue\"}}, \"plots\": {\"image_file_format\": \"png\", \"title\": \"\", \"removeFirstSamples\": \"-1\", \"nsampInPlot\": \"100000\", \"prettyBins\": \"-1\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "1.1.3+galaxy0",
                "type": "tool",
                "uuid": "75379c38-7040-4651-b875-5ad7382de31d",
                "when": null,
                "workflow_outputs": [
                    {
                        "label": "baredsc_qc_plots",
                        "output_name": "qc_plots",
                        "uuid": "269f21b9-0499-40bc-88d5-555ee46d166d"
                    },
                    {
                        "label": "baredsc_neff",
                        "output_name": "neff",
                        "uuid": "b2f23ac4-3634-4c1c-a17c-89a6fec675d8"
                    },
                    {
                        "label": "baredsc_numpy",
                        "output_name": "output",
                        "uuid": "f5339d63-a667-4cd2-879c-d35c633e3ffd"
                    }
                ]
            },
            "6": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_1d/baredsc_combine_1d/1.1.3+galaxy0",
                "errors": null,
                "id": 6,
                "input_connections": {
                    "MCMC|outputs": {
                        "id": 5,
                        "output_name": "output"
                    },
                    "MCMC|xmax": {
                        "id": 2,
                        "output_name": "output"
                    },
                    "geneColName": {
                        "id": 1,
                        "output_name": "output"
                    },
                    "input_counts|input": {
                        "id": 0,
                        "output_name": "output"
                    }
                },
                "inputs": [
                    {
                        "description": "runtime parameter for tool Combine multiple 1D Models",
                        "name": "MCMC"
                    },
                    {
                        "description": "runtime parameter for tool Combine multiple 1D Models",
                        "name": "MCMC"
                    },
                    {
                        "description": "runtime parameter for tool Combine multiple 1D Models",
                        "name": "input_counts"
                    }
                ],
                "label": "combine baredSC 1d",
                "name": "Combine multiple 1D Models",
                "outputs": [
                    {
                        "name": "other_outputs",
                        "type": "input"
                    },
                    {
                        "name": "pdf",
                        "type": "tabular"
                    },
                    {
                        "name": "plot",
                        "type": "png"
                    }
                ],
                "position": {
                    "left": 1220,
                    "top": 170.5
                },
                "post_job_actions": {},
                "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_1d/baredsc_combine_1d/1.1.3+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "5b7c81b35b89",
                    "name": "baredsc_combine_1d",
                    "owner": "iuc",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"MCMC\": {\"outputs\": {\"__class__\": \"ConnectedValue\"}, \"xmin\": \"0.0\", \"xmax\": {\"__class__\": \"ConnectedValue\"}, \"nx\": \"100\", \"minScalex\": \"0.1\", \"scale\": {\"type\": \"Seurat\", \"__current_case__\": 0, \"targetSum\": \"10000.0\"}, \"seed\": \"1\"}, \"advanced\": {\"osampx\": \"10\", \"osampxpdf\": \"5\", \"coviscale\": \"1.0\", \"nis\": \"1000\"}, \"filter\": {\"nb\": \"0\", \"__current_case__\": 0}, \"geneColName\": {\"__class__\": \"ConnectedValue\"}, \"input_counts\": {\"filetype\": \"tabular\", \"__current_case__\": 0, \"input\": {\"__class__\": \"ConnectedValue\"}}, \"plots\": {\"image_file_format\": \"png\", \"title\": \"\", \"removeFirstSamples\": \"-1\", \"nsampInPlot\": \"100000\", \"prettyBins\": \"-1\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "1.1.3+galaxy0",
                "type": "tool",
                "uuid": "752ba293-93e9-4769-85d0-ebc9c2c100b6",
                "when": null,
                "workflow_outputs": [
                    {
                        "label": "combined_pdf",
                        "output_name": "pdf",
                        "uuid": "2aa68ed9-2ca6-4f31-be28-bcead2a78e72"
                    },
                    {
                        "label": "combined_plot",
                        "output_name": "plot",
                        "uuid": "f1cd8147-a286-43a7-bb82-9ee5f881e8fa"
                    },
                    {
                        "label": "combined_other_outputs",
                        "output_name": "other_outputs",
                        "uuid": "b8da3ab7-2fed-445e-a3a8-97ddcfa68b8e"
                    }
                ]
            }
        },
        "tags": [],
        "uuid": "1ea0b92d-d863-435a-96ac-1e547fdbc994",
        "version": 7
    },
    "workflow_job_input": {
        "Tabular with raw expression values": {
            "class": "File",
            "path": "todo_test_data_path.ext"
        },
        "Gene name": "todo_param_value",
        "Maximum value in logNorm": "todo_param_value",
        "Maximum number of Gaussians to study": "todo_param_value"
    },
    "readme": "# Single-Cell Mixture Analysis: baredSC Log-Normalized Models\n\nThese workflows allow to run a baredSC analysis from a table with counts in a single click. It uses models from 1 to N Gaussians and combine them. It uses the logNorm scale, 100 bins for 1 dimension and 25 bins on each axis in 2 dimensions.\n\n## Inputs dataset\n\n- Both workflows need a tabular dataset where each row is a cell. The tabular needs to have a header line with column names. There must be at least two columns: 'nCount_RNA' and another one with the counts for the gene(s) of interest. A way to get such table in R from a Seurat object (`seurat.obj`) is:\n\n```r\nmy.genes <- c(\"Hoxa13\", \"Hoxd13\")\ndf <- cbind(seurat.obj[[]], # This will give you all metadata including nCount_RNA\n            FetchData(seurat.obj, slot = \"counts\", vars = my.genes))\n\nwrite.table(df, \"input_for_baredSC.txt\", quote = F, sep = \"\\t\", row.names = F)\n```\n\n## Inputs values\n\nFor the 1D:\n\n- Gene name: The name of the column with the counts of your gene of interest.\n- Maximum value in logNorm: The maximum value to explore in PDF. This value should be large enough so the PDF is at 0 at this value.\n- Maximum number of Gaussians to study: All models between models with 1 Gaussians to models with this number of Gaussians will be combined.\n\nFor the 2D:\n\n- Gene name for x axis: The name of the column with the counts of your gene in x axis.\n- Gene name for y axis: The name of the column with the counts of your gene in y axis.\n- maximum value in logNorm for x-axis: The maximum value to explore in PDF in the x axis. This value should be large enough so the PDF is at 0 at this value.\n- maximum value in logNorm for y-axis: The maximum value to explore in PDF in the y axis. This value should be large enough so the PDF is at 0 at this value.\n- Maximum number of Gaussians to study: All models between models with 1 2D-Gaussians to models with this number of 2D-Gaussians will be combined.\n- compute p-value: Whether you want to get a p-value. As a consequence, less samples than available will be used for plots as p-value computation requires to have independent samples.\n\n## Processing\n\n- The workflow will generate paramater values from 1 to the maximum number of Gaussians to study.\n- baredSC_1d or baredSC_2d is run for each of these number of Gaussians\n- All models are combined into a single result.\n",
    "changelog": "# Changelog\n\n## [0.6] - 2025-03-10\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.5+galaxy0`\n\n## [0.5] - 2024-05-27\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.1` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.2`\n- `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.1` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.2`\n\n## [0.4] - 2024-04-08\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy1`\n- `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_1d/baredsc_1d/1.1.2+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_1d/baredsc_1d/1.1.3+galaxy0`\n- `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_1d/baredsc_combine_1d/1.1.2+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_1d/baredsc_combine_1d/1.1.3+galaxy0`\n- `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy1`\n- `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_2d/baredsc_2d/1.1.2+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_2d/baredsc_2d/1.1.3+galaxy0`\n- `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_2d/baredsc_combine_2d/1.1.2+galaxy1` was updated to `toolshed.g2.bx.psu.edu/repos/iuc/baredsc_combine_2d/baredsc_combine_2d/1.1.3+galaxy0`\n\n## [0.3] - 2024-03-05\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/9.3+galaxy0`\n\n## [0.2] - 2023-12-01\n\n### Add 'compute p-value' parameter in 2d\n\n### Semi-automatic update\n- all baredsc tools were updated from `1.1.2+galaxy0` to `1.1.2+galaxy1`\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.1`\n\n## [0.1] - 2023-10-03\n\nFirst release.\n",
    "diagrams": "# Workflow diagrams\n\n## Single-Cell Mixture Analysis: baredSC 1D Log-Normalized Models\n\n```mermaid\ngraph LR\n0[\"\u2139\ufe0f Tabular with raw expression values\"]@{ shape: doc }\n1[\"\u2139\ufe0f Gene name\"]@{ shape: lean-l }\n2[\"\u2139\ufe0f Maximum value in logNorm\"]@{ shape: lean-l }\n3[\"\u2139\ufe0f Maximum number of Gaussians to study\"]@{ shape: lean-l }\n4[\"\ud83d\udee0\ufe0f generate_param_list_one_to_number\"]@{ shape: subprocess }\n3 --> 4\n5[\"baredSC\"]@{ shape: process }\n4 --> 5\n2 --> 5\n1 --> 5\n0 --> 5\n6[\"combine baredSC 1d\"]@{ shape: process }\n5 --> 6\n2 --> 6\n1 --> 6\n0 --> 6\n```\n\n## generate_param_list_one_to_number\n\n```mermaid\ngraph LR\n0[\"\u2139\ufe0f Maximum number in param output\"]@{ shape: lean-l }\n1[\"create first tabular with good number of rows.\"]@{ shape: process }\n0 --> 1\n2[\"add column with numbers starting at 1\"]@{ shape: process }\n1 --> 2\n3[\"retrieve numbers\"]@{ shape: process }\n2 --> 3\n4[\"split numbers to collection\"]@{ shape: process }\n3 --> 4\n5[\"numbers to param\"]@{ shape: process }\n4 --> 5\n```\n",
    "updated": "2025-03-10T00:00:00",
    "trsID": "#workflow/github.com/iwc-workflows/baredsc/baredSC-1d-logNorm",
    "iwcID": "baredsc-baredsc-1d-lognorm",
    "dockstore_id": 24061,
    "categories": [],
    "collections": [
        "Transcriptomics",
        "Single Cell"
    ],
    "doi": "10.5281/zenodo.15078889",
    "tests": [
        {
            "doc": "Test outline for baredSC_1d",
            "job": {
                "Tabular with raw expression values": {
                    "class": "File",
                    "filetype": "tabular",
                    "location": "https://raw.githubusercontent.com/galaxyproject/iwc/main/workflows/scRNAseq/baredsc/test-data/nih3t3_generated_2d_2.txt"
                },
                "Gene name": "0.5_0_0_0.5_x",
                "Maximum value in logNorm": "2.5",
                "Maximum number of Gaussians to study": "4"
            },
            "outputs": {
                "baredsc_numpy": {
                    "element_tests": {
                        "split_file_000000.tabular": {
                            "asserts": {
                                "has_size": {
                                    "value": 1257919,
                                    "delta": 100000
                                }
                            }
                        },
                        "split_file_000001.tabular": {
                            "asserts": {
                                "has_size": {
                                    "value": 1601519,
                                    "delta": 100000
                                }
                            }
                        },
                        "split_file_000002.tabular": {
                            "asserts": {
                                "has_size": {
                                    "value": 2180423,
                                    "delta": 200000
                                }
                            }
                        },
                        "split_file_000003.tabular": {
                            "asserts": {
                                "has_size": {
                                    "value": 28234812,
                                    "delta": 2000000
                                }
                            }
                        }
                    }
                },
                "baredsc_qc_plots": {
                    "element_tests": {
                        "split_file_000000.tabular": {
                            "element_tests": {
                                "convergence": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 20304,
                                            "delta": 1000
                                        }
                                    }
                                },
                                "corner": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 63603,
                                            "delta": 6000
                                        }
                                    }
                                },
                                "p": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 45302,
                                            "delta": 4000
                                        }
                                    }
                                }
                            }
                        },
                        "split_file_000001.tabular": {
                            "element_tests": {
                                "convergence": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 27704,
                                            "delta": 2000
                                        }
                                    }
                                },
                                "corner": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 387365,
                                            "delta": 30000
                                        }
                                    }
                                },
                                "p": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 97623,
                                            "delta": 90000
                                        }
                                    }
                                }
                            }
                        },
                        "split_file_000002.tabular": {
                            "element_tests": {
                                "convergence": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 32463,
                                            "delta": 3000
                                        }
                                    }
                                },
                                "corner": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 1103840,
                                            "delta": 100000
                                        }
                                    }
                                },
                                "p": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 159797,
                                            "delta": 10000
                                        }
                                    }
                                }
                            }
                        },
                        "split_file_000003.tabular": {
                            "element_tests": {
                                "convergence": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 31343,
                                            "delta": 3000
                                        }
                                    }
                                },
                                "corner": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 2139411,
                                            "delta": 200000
                                        }
                                    }
                                },
                                "p": {
                                    "asserts": {
                                        "has_size": {
                                            "value": 175774,
                                            "delta": 10000
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "baredsc_neff": {
                    "element_tests": {
                        "split_file_000000.tabular": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 1
                                },
                                "has_line_matching": {
                                    "expression": "80[0-9][0-9].[0-9]*"
                                }
                            }
                        },
                        "split_file_000001.tabular": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 1
                                },
                                "has_line_matching": {
                                    "expression": "13[0-9][0-9].[0-9]*"
                                }
                            }
                        },
                        "split_file_000002.tabular": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 1
                                },
                                "has_line_matching": {
                                    "expression": "2[0-9][0-9].[0-9]*"
                                }
                            }
                        },
                        "split_file_000003.tabular": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 1
                                },
                                "has_line_matching": {
                                    "expression": "[7-9][0-9][0-9].[0-9]*"
                                }
                            }
                        }
                    }
                },
                "combined_other_outputs": {
                    "element_tests": {
                        "individuals": {
                            "asserts": {
                                "has_size": {
                                    "value": 108407,
                                    "delta": 10000
                                }
                            }
                        },
                        "means": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 99998,
                                    "delta": 4000
                                },
                                "has_line_matching": {
                                    "expression": "6.[0-9]*e-01"
                                }
                            }
                        },
                        "posterior_andco": {
                            "asserts": {
                                "has_size": {
                                    "value": 197980,
                                    "delta": 10000
                                }
                            }
                        },
                        "posterior_individuals": {
                            "asserts": {
                                "has_size": {
                                    "value": 105262,
                                    "delta": 10000
                                }
                            }
                        },
                        "posterior_per_cell": {
                            "asserts": {
                                "has_n_lines": {
                                    "n": 2362
                                },
                                "has_line_matching": {
                                    "expression": "mu\tsd"
                                }
                            }
                        },
                        "with_posterior": {
                            "asserts": {
                                "has_size": {
                                    "value": 234303,
                                    "delta": 20000
                                }
                            }
                        }
                    }
                },
                "combined_pdf": {
                    "asserts": {
                        "has_line": {
                            "line": "x\tlow\tmean\thigh\tmedian"
                        },
                        "has_text": {
                            "text": "0.0125\t"
                        }
                    }
                },
                "combined_plot": {
                    "path": "test-data/combined_1d_plot.png",
                    "compare": "sim_size",
                    "delta_frac": 0.1
                }
            }
        }
    ]
}