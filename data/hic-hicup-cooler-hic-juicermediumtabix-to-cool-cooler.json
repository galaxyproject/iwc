{
    "name": "hic-juicermediumtabix-to-cool-cooler",
    "subclass": "Galaxy",
    "publish": true,
    "primaryDescriptorPath": "/hic-juicermediumtabix-to-cool-cooler.ga",
    "testParameterFiles": [
        "/hic-juicermediumtabix-to-cool-cooler-tests.yml"
    ],
    "authors": [
        {
            "name": "Lucille Delisle",
            "orcid": "0000-0002-1964-4960"
        }
    ],
    "definition": {
        "a_galaxy_workflow": "true",
        "annotation": "Converts Hi-C interaction data from Juicer medium format (tabix files) to balanced cooler format. This streamlined workflow takes a collection of Juicer medium tabix files and a reference genome name as input and generates balanced cool files at user-specified resolution. Enables seamless transition between different Hi-C analysis ecosystems while maintaining data integrity.",
        "creator": [
            {
                "class": "Person",
                "identifier": "https://orcid.org/0000-0002-1964-4960",
                "name": "Lucille Delisle"
            }
        ],
        "format-version": "0.1",
        "license": "MIT",
        "release": "0.3",
        "name": "Hi-C Format Conversion: Juicer Medium to Cooler Files",
        "steps": {
            "0": {
                "annotation": "For example 10000 for 10kb",
                "content_id": null,
                "errors": null,
                "id": 0,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "For example 10000 for 10kb",
                        "name": "Bin size in bp"
                    }
                ],
                "label": "Bin size in bp",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 0,
                    "top": 33.5
                },
                "tool_id": null,
                "tool_state": "{\"parameter_type\": \"integer\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "d0a82863-82f8-426c-addb-06066e9d0a73",
                "when": null,
                "workflow_outputs": []
            },
            "1": {
                "annotation": "This is used to get the chromosome sizes",
                "content_id": null,
                "errors": null,
                "id": 1,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "This is used to get the chromosome sizes",
                        "name": "genome name"
                    }
                ],
                "label": "genome name",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 46,
                    "top": 123.5
                },
                "tool_id": null,
                "tool_state": "{\"restrictOnConnections\": true, \"parameter_type\": \"text\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "48506f80-b1b5-4d1d-98a6-c6882de026f1",
                "when": null,
                "workflow_outputs": []
            },
            "2": {
                "annotation": "",
                "content_id": null,
                "errors": null,
                "id": 2,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "",
                        "name": "Juicer Medium Tabix with validPairs"
                    }
                ],
                "label": "Juicer Medium Tabix with validPairs",
                "name": "Input dataset collection",
                "outputs": [],
                "position": {
                    "left": 129.25,
                    "top": 208.25
                },
                "tool_id": null,
                "tool_state": "{\"optional\": false, \"tag\": \"\", \"collection_type\": \"list\"}",
                "tool_version": null,
                "type": "data_collection_input",
                "uuid": "588962a4-8ce4-4929-81fd-a9dfdd032598",
                "when": null,
                "workflow_outputs": []
            },
            "3": {
                "annotation": "Recommended value: cis-only",
                "content_id": null,
                "errors": null,
                "id": 3,
                "input_connections": {},
                "inputs": [
                    {
                        "description": "Recommended value: cis-only",
                        "name": "Interactions to consider to calculate weights in normalization step"
                    }
                ],
                "label": "Interactions to consider to calculate weights in normalization step",
                "name": "Input parameter",
                "outputs": [],
                "position": {
                    "left": 221,
                    "top": 309.75
                },
                "tool_id": null,
                "tool_state": "{\"restrictOnConnections\": true, \"parameter_type\": \"text\", \"optional\": false}",
                "tool_version": null,
                "type": "parameter_input",
                "uuid": "d6375500-a591-47a9-b126-950347e3e7a8",
                "when": null,
                "workflow_outputs": []
            },
            "4": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_makebins/cooler_makebins/0.9.3+galaxy0",
                "errors": null,
                "id": 4,
                "input_connections": {
                    "binsize": {
                        "id": 0,
                        "output_name": "output"
                    },
                    "size_source|fasta_cached": {
                        "id": 1,
                        "output_name": "output"
                    }
                },
                "inputs": [],
                "label": "make bed with bins",
                "name": "cooler_makebins",
                "outputs": [
                    {
                        "name": "output",
                        "type": "bed"
                    }
                ],
                "position": {
                    "left": 489.25,
                    "top": 0
                },
                "post_job_actions": {
                    "HideDatasetActionoutput": {
                        "action_arguments": {},
                        "action_type": "HideDatasetAction",
                        "output_name": "output"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_makebins/cooler_makebins/0.9.3+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "ebd2a52eb245",
                    "name": "cooler_makebins",
                    "owner": "lldelisle",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"binsize\": {\"__class__\": \"ConnectedValue\"}, \"size_source\": {\"size_source_selector\": \"cached\", \"__current_case__\": 0, \"fasta_cached\": {\"__class__\": \"ConnectedValue\"}}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.9.3+galaxy0",
                "type": "tool",
                "uuid": "34e0a213-93e8-466e-b07b-ede1443ee7d6",
                "when": null,
                "workflow_outputs": []
            },
            "5": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_cload_tabix/cooler_cload_tabix/0.9.3+galaxy1",
                "errors": null,
                "id": 5,
                "input_connections": {
                    "assembly": {
                        "id": 1,
                        "output_name": "output"
                    },
                    "format_sel|input_pairs": {
                        "id": 2,
                        "output_name": "output"
                    },
                    "input_bed": {
                        "id": 4,
                        "output_name": "output"
                    }
                },
                "inputs": [],
                "label": "Load pairs in matrix",
                "name": "cooler_cload_tabix",
                "outputs": [
                    {
                        "name": "output",
                        "type": "cool"
                    }
                ],
                "position": {
                    "left": 762.25,
                    "top": 58
                },
                "post_job_actions": {
                    "RenameDatasetActionoutput": {
                        "action_arguments": {
                            "newname": "matrix with raw values"
                        },
                        "action_type": "RenameDatasetAction",
                        "output_name": "output"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_cload_tabix/cooler_cload_tabix/0.9.3+galaxy1",
                "tool_shed_repository": {
                    "changeset_revision": "0641e1c892c6",
                    "name": "cooler_cload_tabix",
                    "owner": "lldelisle",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"assembly\": {\"__class__\": \"ConnectedValue\"}, \"format_sel\": {\"format\": \"juicer_medium\", \"__current_case__\": 0, \"input_pairs\": {\"__class__\": \"ConnectedValue\"}}, \"input_bed\": {\"__class__\": \"ConnectedValue\"}, \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.9.3+galaxy1",
                "type": "tool",
                "uuid": "d411eea7-7996-44f2-af2a-feecb854a067",
                "when": null,
                "workflow_outputs": [
                    {
                        "label": "matrix with raw values",
                        "output_name": "output",
                        "uuid": "d398b493-9b5d-412f-a06d-d1cfdc904feb"
                    }
                ]
            },
            "6": {
                "annotation": "",
                "content_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_balance/cooler_balance/0.9.3+galaxy0",
                "errors": null,
                "id": 6,
                "input_connections": {
                    "cistrans": {
                        "id": 3,
                        "output_name": "output"
                    },
                    "input": {
                        "id": 5,
                        "output_name": "output"
                    }
                },
                "inputs": [
                    {
                        "description": "runtime parameter for tool cooler_balance",
                        "name": "blacklist"
                    }
                ],
                "label": "ICE normalization",
                "name": "cooler_balance",
                "outputs": [
                    {
                        "name": "output",
                        "type": "cool"
                    }
                ],
                "position": {
                    "left": 991.25,
                    "top": 254.5
                },
                "post_job_actions": {
                    "RenameDatasetActionoutput": {
                        "action_arguments": {
                            "newname": "matrix with iced values"
                        },
                        "action_type": "RenameDatasetAction",
                        "output_name": "output"
                    }
                },
                "tool_id": "toolshed.g2.bx.psu.edu/repos/lldelisle/cooler_balance/cooler_balance/0.9.3+galaxy0",
                "tool_shed_repository": {
                    "changeset_revision": "8f9fe0667b89",
                    "name": "cooler_balance",
                    "owner": "lldelisle",
                    "tool_shed": "toolshed.g2.bx.psu.edu"
                },
                "tool_state": "{\"blacklist\": {\"__class__\": \"RuntimeValue\"}, \"cistrans\": {\"__class__\": \"ConnectedValue\"}, \"convergencepolicy\": \"error\", \"ignorediags\": \"2\", \"ignoredist\": \"0\", \"input\": {\"__class__\": \"ConnectedValue\"}, \"madmax\": \"5\", \"maxiters\": \"200\", \"mincount\": \"0\", \"minnnz\": \"10\", \"name\": \"weight\", \"tol\": \"1e-05\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
                "tool_version": "0.9.3+galaxy0",
                "type": "tool",
                "uuid": "44270887-1c96-4ede-8bb9-3db2a07eeb6e",
                "when": null,
                "workflow_outputs": [
                    {
                        "label": "matrix with iced values",
                        "output_name": "output",
                        "uuid": "1d4fe955-922e-40bf-b879-a71290af3ea7"
                    }
                ]
            }
        },
        "tags": [
            "Hi-C"
        ],
        "uuid": "48733b55-4cde-45d4-a69e-78faff0db3f5",
        "version": 1
    },
    "readme": "# (Capture) Hi-C Processing: FASTQ to Balanced Cool Files\n\nThis can also be used for Hi-ChIP experiments, in that case the output with `matrix with iced values` is ignored and the matrix to use is `matrix with raw values`.\n\n## Input datasets\n\n- The workflow needs a list of dataset pairs of fastqsanger.\n\n## Input values\n\n- genome name: suggested from the bowtie2 indices, it is used to map and build the list of bins.\n- restriction enzyme: Restriction enzyme used e.g. A^GATCT,BglII. The '^' is used to express where the enzyme cuts.\n- No fill-in: If you used a biotin fill-in protocol, put this to false, else, put it to true.\n- minimum MAPQ: Filtering to apply to pairs you want to keep in your matrix, set it to 0 to not apply filtering (HiCUP already filter for uniquely mapped or MAPQ30).\n- Bin size in bp: Used to generate your first matrix but you will be able to rerun the subworkflow `hic_tabix_to_cool_cooler` to get other resolutions.\n- Interactions to consider to calculate weights in normalization step: this is a parameter for the last correction step (ICE).\n\nFor the region capture workflow:\n\n- chromosome, start and end positions of the capture region\n\nFor the Hi-C workflow:\n\n- region to use in pyGenomeTracks to check the matrices.\n\n## Processing\n\n- Reads are processed with HiCUP which comprises these steps:\n  - Truncation of reads for the religation motif\n  - Mapping of mates independently with bowtie2\n  - Pairing the mates when both mates are uniquely mapped or MAPQ30\n  - Filtering the pairs for undigested, self-ligated...\n  - Removing duplicates\n- The output BAM file is converted to medium juicer format: `<readname> <str1> <chr1> <pos1> <frag1> <str2> <chr2> <pos2> <frag2> <mapq1> <mapq2>` where str = strand (0 for forward, anything else for reverse) and pos is the middle of the fragment.\n- The pairs are filtered for MAPQ if specified.\n- For the region capture Hi-C workflow the pairs are filtered for both mates in the captured region.\n- The filtered pairs are sorted and indexed with cooler_csort.\n- The pairs are loaded into a matrix of the given resolution and balanced with cooler.\n- A final plot is made with pyGenomeTracks using the balanced matrices on the region provided or the capture region.\n\n## Subworkflows\n\nThere are 2 subworkflows: `hic_tabix_to_cool_cooler` and `hic_fastq_to_pairs_hicup.ga`.\n\n### hic_tabix_to_cool_cooler\n\nThis first subworkflow can be used to generate matrices to different resolutions using one of the output of the full workflow (`valid pairs filtered and sorted`).\n\nIf the dataset are still in galaxy (format: juicer_medium_tabix.gz), the workflow can be run directly.\n\nIf the dataset is not anymore in galaxy, you need to upload and specify the datatype as: juicer_medium_tabix.gz\n\n### hic_fastq_to_pairs_hicup\n\nThe second subworkflow has no real reason to be launched by itself except for QC tests.\n\nIf you want to run the first subworkflow from these results:\n\n- You first need to filter the pairs (`valid pairs in juicebox format MAPQ filtered`) for the capture region if relevent using the tool Filter1 (**Filter** data on any column using simple expressions) with the condition `(c3=='chr2' and c4<180000000 and c4>170000000) and (c7==\"chr2\" and c8<180000000 and c8>170000000)` if your capture region is chr2:170000000-180000000.\n- Then you need to run cooler_csort (**cooler csort with tabix** Sort and index a contact list.) with as input the `valid pairs in juicebox format MAPQ filtered` or the output of the previous step and for \"Format of your input file\" use \"Juicer Medium Format\".\n\nThe output of `cooler_csort` can be used as input of the first subworkflow.\n",
    "changelog": "# Changelog\n\n## [0.3] - 2023-09-08\n\n### Update tools\n- all cooler tools were updated from 0.8.11 to 0.9.3\n- pyGenomeTracks was updated from 3.7 to 3.8\n\n## [0.2.1] - 2023-09-01 Bug fix\n\nFix dockstore (workflows are the same)\n\n## [0.2] - 2023-02-17\n\n### Automatic update\n- `toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks/3.7+galaxy0` was updated to `toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks/3.8+galaxy0`\n- `toolshed.g2.bx.psu.edu/repos/bgruening/hicup_hicup/hicup_hicup/0.8.3+galaxy0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/hicup_hicup/hicup_hicup/0.9.2+galaxy0`\n- `toolshed.g2.bx.psu.edu/repos/bgruening/hicup2juicer/hicup2juicer/0.8.3+galaxy0` was updated to `toolshed.g2.bx.psu.edu/repos/bgruening/hicup2juicer/hicup2juicer/0.9.2+galaxy0`\n\n### Manual update\n- Get fragment id in valid pairs file.\n- Use the middle of the fragment instead of 5' of the read in the valid pairs file.\n\n## [0.1] - 2023-01-16\n\nFirst release.\n",
    "diagrams": "# Workflow diagrams\n\n## Hi-C Format Conversion: Juicer Medium to Cooler Files\n\n```mermaid\ngraph LR\n0[\"\u2139\ufe0f Bin size in bp\"]@{ shape: lean-l }\n1[\"\u2139\ufe0f genome name\"]@{ shape: lean-l }\n2[\"\u2139\ufe0f Juicer Medium Tabix with validPairs\"]@{ shape: docs }\n3[\"\u2139\ufe0f Interactions to consider to calculate weights in normalization step\"]@{ shape: lean-l }\n4[\"make bed with bins\"]@{ shape: process }\n0 --> 4\n1 --> 4\n5[\"Load pairs in matrix\"]@{ shape: process }\n1 --> 5\n2 --> 5\n4 --> 5\n6[\"ICE normalization\"]@{ shape: process }\n3 --> 6\n5 --> 6\n```\n",
    "updated": "2023-09-08T00:00:00",
    "trsID": "#workflow/github.com/iwc-workflows/hic-hicup-cooler/hic-juicermediumtabix-to-cool-cooler",
    "iwcID": "hic-hicup-cooler-hic-juicermediumtabix-to-cool-cooler",
    "dockstore_id": 20779,
    "categories": [],
    "collections": [
        "Epigenetics"
    ],
    "doi": "10.5281/zenodo.15078469",
    "tests": [
        {
            "doc": "Test outline for Hi-C_fastqToCool_hicup_cooler",
            "job": {
                "Juicer Medium Tabix with validPairs": {
                    "class": "Collection",
                    "collection_type": "list",
                    "elements": [
                        {
                            "class": "File",
                            "identifier": "test_dataset",
                            "filetype": "juicer_medium_tabix.gz",
                            "location": "https://raw.githubusercontent.com/galaxyproject/iwc/main/workflows/epigenetics/hic-hicup-cooler/test-data/valid_pairs_filtered_and_sorted.juicer_medium_tabix.gz"
                        }
                    ]
                },
                "genome name": "hg19",
                "Bin size in bp": 1000000,
                "Interactions to consider to calculate weights in normalization step": "--cis-only"
            },
            "outputs": {
                "matrix with raw values": {
                    "element_tests": {
                        "test_dataset": {
                            "asserts": {
                                "has_size": {
                                    "value": 42118,
                                    "delta": 4000
                                }
                            }
                        }
                    }
                },
                "matrix with iced values": {
                    "element_tests": {
                        "test_dataset": {
                            "asserts": {
                                "has_size": {
                                    "value": 47830,
                                    "delta": 4000
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}